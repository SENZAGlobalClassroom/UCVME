-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-02-29 00:44:03 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g
-- predefined type, no DDL - MDSYS.SDO_GEOMETRY
-- predefined type, no DDL - XMLTYPE
-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-02-29 00:44:03 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g
-- predefined type, no DDL - MDSYS.SDO_GEOMETRY
-- predefined type, no DDL - XMLTYPE
create table account 
(
  account_email CHAR(100) NOT NULL,
  account_password CHAR(50) NOT NULL,
  constraint account_pk primary key (account_email);
);

create table cv
(
  cv_fullname           VARCHAR2(100) NOT NULL,
  cv_video              BLOB,
  cv_personality        VARCHAR2(100) NOT NULL,
  cv_work_experience    VARCHAR2(250),
  cv_qr_code            BLOB,
  cv_link               VARCHAR2(100),
  account_email CHAR(100) NOT NULL,
  constraint cv_account_fk foreign key (account_email) references account.account_email
);

create table job_post 
(
  job_id                INTEGER NOT NULL,
  job_title             VARCHAR2(100),
  job_category          VARCHAR2(50) NOT NULL,
  job_experience        CHAR(25) NOT NULL,
  job_description       VARCHAR2(200),
  job_image             BLOB,
  job_availability      DATE NOT NULL,
  account_email CHAR(100) NOT NULL,
  constraint job_post_account_fk foreign key (account_email) references account.account_email
);

create table saved_cv
(
  saved_cv_date         DATE NOT NULL,
  saved_cv_fullname     VARCHAR2(100),
  saved_cv_email        VARCHAR2(100),
  account_email CHAR(100) NOT NULL,
  cv_fullname        VARCHAR2(100) NOT NULL,
  constraint saved_cv_account_fk foreign key (account_email)REFERENCES account.account_email,
  CONSTRAINT saved_cv_cv_fk FOREIGN KEY (cv_fullname) REFERENCES cv.cv_fullname
);











CREATE TABLE account (
    account_email    CHAR(100) NOT NULL,
    account_password CHAR(50) NOT NULL
);

ALTER TABLE account ADD CONSTRAINT account_pk PRIMARY KEY ( account_email );


CREATE TABLE Account_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,Account_Email CHAR (100) NOT NULL
 ,Account_Password CHAR (50) NOT NULL
 );

CREATE OR REPLACE TRIGGER Account_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON Account for each row 
 Declare 
  rec Account_JN%ROWTYPE; 
  blank Account_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.Account_Email := :NEW.Account_Email; 
      rec.Account_Password := :NEW.Account_Password; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.Account_Email := :OLD.Account_Email; 
      rec.Account_Password := :OLD.Account_Password; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into Account_JN VALUES rec; 
  END; 
  /CREATE TABLE cv (
    cv_fullname           VARCHAR2(100) NOT NULL,
    cv_video              BLOB,
    cv_personality        VARCHAR2(100) NOT NULL,
    cv_work_experience    VARCHAR2(250),
    cv_qr_code            BLOB,
    cv_link               VARCHAR2(100),
    account_account_email CHAR(100) NOT NULL
);

CREATE UNIQUE INDEX cv__idx ON
    cv (
        account_account_email
    ASC );

ALTER TABLE cv ADD CONSTRAINT cv_pk PRIMARY KEY ( cv_fullname );


CREATE TABLE CV_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CV_Fullname VARCHAR2 (100) NOT NULL
 ,CV_Video BLOB
 ,CV_Personality VARCHAR2 (100) NOT NULL
 ,CV_Work_Experience VARCHAR2 (250)
 ,CV_QR_Code BLOB
 ,CV_Link VARCHAR2 (100)
 ,Account_Account_Email CHAR (100) NOT NULL
 );

CREATE OR REPLACE TRIGGER CV_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON CV for each row 
 Declare 
  rec CV_JN%ROWTYPE; 
  blank CV_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CV_Fullname := :NEW.CV_Fullname; 
      rec.CV_Video := :NEW.CV_Video; 
      rec.CV_Personality := :NEW.CV_Personality; 
      rec.CV_Work_Experience := :NEW.CV_Work_Experience; 
      rec.CV_QR_Code := :NEW.CV_QR_Code; 
      rec.CV_Link := :NEW.CV_Link; 
      rec.Account_Account_Email := :NEW.Account_Account_Email; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CV_Fullname := :OLD.CV_Fullname; 
      rec.CV_Video := :OLD.CV_Video; 
      rec.CV_Personality := :OLD.CV_Personality; 
      rec.CV_Work_Experience := :OLD.CV_Work_Experience; 
      rec.CV_QR_Code := :OLD.CV_QR_Code; 
      rec.CV_Link := :OLD.CV_Link; 
      rec.Account_Account_Email := :OLD.Account_Account_Email; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into CV_JN VALUES rec; 
  END; 
  /CREATE TABLE job_post (
    job_id                INTEGER NOT NULL,
    job_title             VARCHAR2(100),
    job_category          VARCHAR2(50) NOT NULL,
    job_experience        CHAR(25) NOT NULL,
    job_description       VARCHAR2(200),
    job_image             BLOB,
    job_availability      DATE NOT NULL,
    account_account_email CHAR(100) NOT NULL
);

ALTER TABLE job_post ADD CONSTRAINT job_post_pk PRIMARY KEY ( job_id );


CREATE TABLE Job_Post_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,Job_ID INTEGER NOT NULL
 ,Job_Title VARCHAR2 (100)
 ,Job_Category VARCHAR2 (50) NOT NULL
 ,Job_Experience CHAR (25) NOT NULL
 ,Job_Description VARCHAR2 (200)
 ,Job_Image BLOB
 ,Job_Availability DATE NOT NULL
 ,Account_Account_Email CHAR (100) NOT NULL
 );

CREATE OR REPLACE TRIGGER Job_Post_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON Job_Post for each row 
 Declare 
  rec Job_Post_JN%ROWTYPE; 
  blank Job_Post_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.Job_ID := :NEW.Job_ID; 
      rec.Job_Title := :NEW.Job_Title; 
      rec.Job_Category := :NEW.Job_Category; 
      rec.Job_Experience := :NEW.Job_Experience; 
      rec.Job_Description := :NEW.Job_Description; 
      rec.Job_Image := :NEW.Job_Image; 
      rec.Job_Availability := :NEW.Job_Availability; 
      rec.Account_Account_Email := :NEW.Account_Account_Email; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.Job_ID := :OLD.Job_ID; 
      rec.Job_Title := :OLD.Job_Title; 
      rec.Job_Category := :OLD.Job_Category; 
      rec.Job_Experience := :OLD.Job_Experience; 
      rec.Job_Description := :OLD.Job_Description; 
      rec.Job_Image := :OLD.Job_Image; 
      rec.Job_Availability := :OLD.Job_Availability; 
      rec.Account_Account_Email := :OLD.Account_Account_Email; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into Job_Post_JN VALUES rec; 
  END; 
  /CREATE TABLE saved_cv (
    saved_cv_date         DATE NOT NULL,
    saved_cv_fullname     VARCHAR2(100),
    saved_cv_email        VARCHAR2(100),
    account_account_email CHAR(100) NOT NULL,
    cv_cv_fullname        VARCHAR2(100) NOT NULL
);

ALTER TABLE saved_cv ADD CONSTRAINT saved_cv_pk PRIMARY KEY ( saved_cv_date );


CREATE TABLE Saved_CV_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,Saved_CV_Date DATE NOT NULL
 ,Saved_CV_Fullname VARCHAR2 (100)
 ,Saved_CV_Email VARCHAR2 (100)
 ,Account_Account_Email CHAR (100) NOT NULL
 ,CV_CV_Fullname VARCHAR2 (100) NOT NULL
 );

CREATE OR REPLACE TRIGGER Saved_CV_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON Saved_CV for each row 
 Declare 
  rec Saved_CV_JN%ROWTYPE; 
  blank Saved_CV_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.Saved_CV_Date := :NEW.Saved_CV_Date; 
      rec.Saved_CV_Fullname := :NEW.Saved_CV_Fullname; 
      rec.Saved_CV_Email := :NEW.Saved_CV_Email; 
      rec.Account_Account_Email := :NEW.Account_Account_Email; 
      rec.CV_CV_Fullname := :NEW.CV_CV_Fullname; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.Saved_CV_Date := :OLD.Saved_CV_Date; 
      rec.Saved_CV_Fullname := :OLD.Saved_CV_Fullname; 
      rec.Saved_CV_Email := :OLD.Saved_CV_Email; 
      rec.Account_Account_Email := :OLD.Account_Account_Email; 
      rec.CV_CV_Fullname := :OLD.CV_CV_Fullname; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into Saved_CV_JN VALUES rec; 
  END; 
  /ALTER TABLE cv
    ADD CONSTRAINT cv_account_fk FOREIGN KEY ( account_account_email )
        REFERENCES account ( account_email );

ALTER TABLE job_post
    ADD CONSTRAINT job_post_account_fk FOREIGN KEY ( account_account_email )
        REFERENCES account ( account_email );

ALTER TABLE saved_cv
    ADD CONSTRAINT saved_cv_account_fk FOREIGN KEY ( account_account_email )
        REFERENCES account ( account_email );

ALTER TABLE saved_cv
    ADD CONSTRAINT saved_cv_cv_fk FOREIGN KEY ( cv_cv_fullname )
        REFERENCES cv ( cv_fullname );